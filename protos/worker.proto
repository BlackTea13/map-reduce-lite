syntax = "proto3";
package worker;

message ReceivedWorkRequest {
  uint32 num_workers = 1;
  oneof job_message {
    MapJobRequest map_message = 2;
    ReduceJobRequest reduce_message = 3;
  }
}

message MapJobRequest {
  string bucket_in = 1;
  repeated string input_keys = 2;
  string bucket_out = 3;
  string output_path = 4;
  string workload = 5;
  repeated string aux = 6;
  int32 worker_id = 7;
}

message ReduceJobRequest {
  // Work is done in one bucket.
  string bucket = 1;

  // The location for the input files. (dir)
  repeated string inputs = 2;

  // The location for the output file. (dir)
  string output = 3;

  string workload = 4;
  repeated string aux = 5;

  uint32 reduce_id = 6;
}

message ReceivedWorkResponse {
  bool success = 1;
}

message AckRequest {
  uint32 worker_id = 1;
}
message AckResponse {}

message KillWorkerRequest {}

message KillWorkerResponse {
    bool success = 1;
}

service Worker {
  rpc ReceivedWork (ReceivedWorkRequest) returns (ReceivedWorkResponse);
  rpc Ack (AckRequest) returns (AckResponse);
  rpc KillWorker (KillWorkerRequest) returns (KillWorkerResponse);
}
